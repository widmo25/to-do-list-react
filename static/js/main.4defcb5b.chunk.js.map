{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","value","type","name","required","autofocus","placeholder","onChange","target","Tasks","tasks","done","hideDone","removeTask","toggleTaskDone","map","task","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","body","extraBodyContent","Header","Container","props","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4defcb5b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\"\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n    }\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                value={newTaskContent}\r\n                className=\"form__input\"\r\n                type=\"text\" name=\"task\"\r\n                required\r\n                autofocus={true}\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <button\r\n                className=\"form__button\">Dodaj zadanie</button>\r\n        </form>\r\n    )\r\n}\r\nexport default Form;","import \"./style.css\"\r\n\r\nconst Tasks = ({ tasks, done, hideDone, removeTask, toggleTaskDone }) => (\r\n    <ul className=\"list\">\r\n        {tasks.map(task => (\r\n            <li key={task.id}\r\n                className={`list__item ${task.done && hideDone ? \"list__item--hidden\" : \"\"}`}\r\n            >\r\n                <button onClick={() => toggleTaskDone(task.id)} className=\"list__button\">\r\n                    {task.done ? \"âœ”\" : \"\"}\r\n                </button>\r\n                <p className={`list__task ${done ? \"list__task--done\" : \"\"}`}>\r\n                    {task.content}\r\n                </p>\r\n                <button onClick={() => removeTask(task.id)} className=\"list__button list__button--higligthed\">\r\n                    ðŸ—‘\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default Tasks;","import \"./style.css\"\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => {\r\n    if (tasks.length === 0) {\r\n        return null;\r\n    }\r\n    return (\r\n        <ul className=\"buttons\">\r\n            <li className=\"buttons__item\">\r\n                <button onClick={toggleHideDone} className=\"buttons__button\">\r\n                    {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n                </button>\r\n            </li>\r\n            <li className=\"buttons__item\">\r\n                <button onClick={setAllDone} className=\"buttons__button\" disabled={tasks.every(({ done }) => done)}>\r\n                    UkoÅ„cz Wszystkie\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default Buttons;\r\n","import \"./style.css\"\r\n\r\nconst Section = ({ title, body, extraBodyContent }) => (\r\n    <section className=\"section\">\r\n        <div className=\"section section--higlighted\">\r\n            <h2 className=\"section__head section__head--higlighted\">{title}</h2>\r\n            {extraBodyContent}\r\n        </div>\r\n        {body}\r\n    </section>\r\n)\r\n\r\nexport default Section;","const Header = ({title}) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n)\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = (props) => (\r\n    <div className=\"container\">\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default Container;","import React, { useState } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\"\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  }\n\n  const [tasks, setTasks] = useState([{ id: 1, content: \"UczyÄ‡ sie Reacta\", done: false },\n  { id: 2, content: \"ZjeÅ›Ä‡ Obiad\", done: true },])\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  }\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n      return task;\n    }))\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({ ...task, done: true })))\n  }\n\n  const addNewTask = (newTaskContent) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content: newTaskContent,\n        done: false,\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1\n      }\n    ])\n  }\n\n  return (\n    <Container>\n      <Header title=\"Lista ZadaÅ„\" />\n      <main>\n        <Section title=\"Dodaj nowe Zadanie\" body={<Form addNewTask={addNewTask} />} />\n        <Section\n          title=\"Lista zadaÅ„\"\n          extraBodyContent={<Buttons tasks={tasks} hideDone={hideDone} toggleHideDone={toggleHideDone} setAllDone={setAllDone} />}\n          body={<Tasks tasks={tasks} hideDone={hideDone} removeTask={removeTask} toggleTaskDone={toggleTaskDone} />}\n        />\n      </main>\n    </Container>\n  )\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}